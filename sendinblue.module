<?php

/**
 * @file
 * The entry point of Sendinblue module.
 */

use Drupal\sendinblue\SendinblueManager;
use Drupal\user\UserInterface;

define('SENDINBLUE_SIGNUP_ENTITY', 'sendinblue_signup_form');
define('SENDINBLUE_SIGNUP_BLOCK', 1);
define('SENDINBLUE_SIGNUP_PAGE', 2);
define('SENDINBLUE_SIGNUP_BOTH', 3);

/**
 * Implements hook_help().
 */
function sendinblue_help($path, $arg) {
  switch ($path) {
    case 'admin/help#sendinblue':
      return t('Sendinblue module provides integration with the SendinBlue email delivery service.');
  }
}

/**
 * Register a module (or theme's) theme implementations.
 *
 * @see hook_theme_registry_alter()
 */
function sendinblue_theme($existing, $type, $theme, $path) {
  return [
    'generateHomeLogout' => [
      'variables' => ['formulaire_api_key' => NULL],
    ],
    'generateHomeLogin' => [
      'variables' => [
        'account_username' => NULL,
        'account_email' => NULL,
        'account_data' => NULL,
        'total_subscribers' => NULL,
        'sendinblue_logout_form' => NULL,
        'sendinblue_user_register_form' => NULL,
        'sendinblue_send_email_form' => NULL,
      ],
    ],
    'iframe_page' => [
      'variables' => ['url_iframe' => NULL],
    ],
  ];
}

/**
 * Add attachments (typically assets) to a page before it is rendered.
 *
 * @param array &$attachments
 *   An array that you can add attachments to.
 *
 * @see hook_page_attachments_alter()
 */
function sendinblue_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'sendinblue/sendinblue.admin-setting';
}


/**
 * Implements hook_ENTITY_TYPE_insert() for node entities.
 *
 * This tests saving a node on node insert.
 *
 * @see \Drupal\node\Tests\NodeSaveTest::testNodeSaveOnInsert()
 */
function sendinblue_user_insert(UserInterface $user) {
  $sendinblue_registered_active = \Drupal::config(SendinblueManager::CONFIG_SETTINGS_REGISTERING_USER)
    ->get('sendinblue_put_registered_user', 0)['active'];
  $sendinblue_registered_list = \Drupal::config(SendinblueManager::CONFIG_SETTINGS_REGISTERING_USER)
    ->get('sendinblue_put_registered_user', 0)['list'];

  if (SendinblueManager::isLoggedInState() && $sendinblue_registered_active) {
    $response_code = SendinblueManager::subscribeUser($user->getEmail(), ['nom' => $user->getAccountName()], [$sendinblue_registered_list]);

    if ($response_code != 'success') {
      drupal_set_message('[Sendinblue] - Error (' . $response_code . ') during add contact to list', 'error');
      return;
    }
    else {
      drupal_set_message('[Sendinblue] - Contact succefully added to list ' . $sendinblue_registered_list);
    }
  }
}